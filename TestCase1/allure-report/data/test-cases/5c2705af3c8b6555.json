{
  "uid" : "5c2705af3c8b6555",
  "name" : "test_10[data0]",
  "fullName" : "test_03.TestSystem#test_10",
  "historyId" : "6f275094bfebc11e5d9baedfa6dde25f",
  "time" : {
    "start" : 1602840912540,
    "stop" : 1602840912540,
    "duration" : 0
  },
  "status" : "broken",
  "statusMessage" : "selenium.common.exceptions.TimeoutException: Message:",
  "statusTrace" : "@pytest.fixture(scope=\"session\")\n    def dealer_session_login():\n        chromedriver = PATH(\"../software/chromedriver.exe\")\n        os.environ['webdriver.chrome.driver'] = chromedriver\n        global driver\n        driver = webdriver.Chrome(chromedriver)\n        driver.get(LD.get_url['url'])\n        driver.maximize_window()\n        driver.implicitly_wait(20)\n        loc(driver).get_login_click()\n        auth = Auth(driver).auth_all('../img/img_03.png')\n>       loc(driver).get_login(LD.login_data[\"username\"], LD.login_data[\"password\"], auth)\n\nconftest.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\Locators\\CommonLT.py:37: in get_login\n    self.click_element(self.click_subscribe)\n..\\Common\\basepage.py:46: in click_element\n    self.get_element(EC.element_to_be_clickable, locator).click()\n..\\Common\\basepage.py:29: in get_element\n    self.wait_vs(ec, locator)\n..\\Common\\basepage.py:18: in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(ec(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0758472fd091e54800cd5bdf69d40232\")>\nmethod = <selenium.webdriver.support.expected_conditions.element_to_be_clickable object at 0x088A5928>\nmessage = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\..\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "dealer_session_login",
    "time" : {
      "start" : 1602840879572,
      "stop" : 1602840911634,
      "duration" : 32062
    },
    "status" : "broken",
    "statusMessage" : "selenium.common.exceptions.TimeoutException: Message: \n\n",
    "statusTrace" : "  File \"d:\\seleniumweb\\python\\lib\\site-packages\\pluggy\\callers.py\", line 187, in _multicall\n    res = hook_impl.function(*args)\n  File \"d:\\seleniumweb\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 1111, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"d:\\seleniumweb\\python\\lib\\site-packages\\_pytest\\fixtures.py\", line 908, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\seleniumweb\\saas\\TestCase1\\conftest.py\", line 23, in dealer_session_login\n    loc(driver).get_login(LD.login_data[\"username\"], LD.login_data[\"password\"], auth)\n  File \"D:\\seleniumweb\\saas\\Locators\\CommonLT.py\", line 37, in get_login\n    self.click_element(self.click_subscribe)\n  File \"D:\\seleniumweb\\saas\\Common\\basepage.py\", line 46, in click_element\n    self.get_element(EC.element_to_be_clickable, locator).click()\n  File \"D:\\seleniumweb\\saas\\Common\\basepage.py\", line 29, in get_element\n    self.wait_vs(ec, locator)\n  File \"D:\\seleniumweb\\saas\\Common\\basepage.py\", line 18, in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(ec(locator))\n  File \"d:\\seleniumweb\\python\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 80, in until\n    raise TimeoutException(message, screen, stacktrace)\n",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : true,
    "stepsCount" : 0,
    "hasContent" : true
  } ],
  "afterStages" : [ ],
  "labels" : [ {
    "name" : "story",
    "value" : "角色管理"
  }, {
    "name" : "tag",
    "value" : "smoke"
  }, {
    "name" : "suite",
    "value" : "test_03"
  }, {
    "name" : "subSuite",
    "value" : "TestSystem"
  }, {
    "name" : "host",
    "value" : "DESKTOP-BQG3M1K"
  }, {
    "name" : "thread",
    "value" : "22136-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_03"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "data",
    "value" : "{'add': '测试', 'add_1': '测试01', 'add_2': '测试02', 'add_3': '测试03'}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "smoke" ]
  },
  "source" : "5c2705af3c8b6555.json",
  "parameterValues" : [ "{'add': '测试', 'add_1': '测试01', 'add_2': '测试02', 'add_3': '测试03'}" ]
}