{"name": "test_01[data0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x0120D343+3134275]\n\tOrdinal0 [0x010FA131+2007345]\n\tOrdinal0 [0x00F9AEC8+569032]\n\tOrdinal0 [0x00F1C9B7+51639]\n\tOrdinal0 [0x00F40DFC+200188]\n\tOrdinal0 [0x00F40C1D+199709]\n\tOrdinal0 [0x00F3EB0B+191243]\n\tOrdinal0 [0x00F22E77+77431]\n\tOrdinal0 [0x00F23E3E+81470]\n\tOrdinal0 [0x00F23DC9+81353]\n\tOrdinal0 [0x01110C99+2100377]\n\tGetHandleVerifier [0x0137B71A+1396954]\n\tGetHandleVerifier [0x0137B399+1396057]\n\tGetHandleVerifier [0x013870E6+1444518]\n\tGetHandleVerifier [0x0137BCA8+1398376]\n\tOrdinal0 [0x01107F11+2064145]\n\tOrdinal0 [0x011122AB+2106027]\n\tOrdinal0 [0x011123D1+2106321]\n\tOrdinal0 [0x01124984+2181508]\n\tBaseThreadInitThunk [0x75F86359+25]\n\tRtlGetAppContainerNamedObjectPath [0x77AE7C24+228]\n\tRtlGetAppContainerNamedObjectPath [0x77AE7BF4+180]", "trace": "@pytest.fixture(scope='session')\n    def project_session_start():\n    \n        chromedriver = PATH(\"../software/chromedriver.exe\")\n        os.environ['webdriver.chrome.driver'] = chromedriver\n        global driver\n>       driver = webdriver.Chrome(chromedriver)\n\nconftest.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\chrome\\webdriver.py:64: in __init__\n    super(WebDriver, self).__init__(DesiredCapabilities.CHROME['browserName'], \"goog\",\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\chromium\\webdriver.py:79: in __init__\n    RemoteWebDriver.__init__(\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:183: in __init__\n    self.start_session(capabilities, browser_profile)\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:280: in start_session\n    response = self.execute(Command.NEW_SESSION, parameters)\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:349: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0280C8E0>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"unknown error\",\"message\":\"unknown error: cannot find Chrome binary\",\"stac...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AE7C24+228]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77AE7BF4+180]\\\\n\"}}'}\n\n    def check_response(self, response):\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if status is None or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, basestring):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if status is None:\n                        status = value[\"status\"]\n                        message = value[\"value\"]\n                        if not isinstance(message, basestring):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if value == '' or value is None:\n            value = response['value']\n        if isinstance(value, basestring):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, basestring):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x0120D343+3134275]\nE       \tOrdinal0 [0x010FA131+2007345]\nE       \tOrdinal0 [0x00F9AEC8+569032]\nE       \tOrdinal0 [0x00F1C9B7+51639]\nE       \tOrdinal0 [0x00F40DFC+200188]\nE       \tOrdinal0 [0x00F40C1D+199709]\nE       \tOrdinal0 [0x00F3EB0B+191243]\nE       \tOrdinal0 [0x00F22E77+77431]\nE       \tOrdinal0 [0x00F23E3E+81470]\nE       \tOrdinal0 [0x00F23DC9+81353]\nE       \tOrdinal0 [0x01110C99+2100377]\nE       \tGetHandleVerifier [0x0137B71A+1396954]\nE       \tGetHandleVerifier [0x0137B399+1396057]\nE       \tGetHandleVerifier [0x013870E6+1444518]\nE       \tGetHandleVerifier [0x0137BCA8+1398376]\nE       \tOrdinal0 [0x01107F11+2064145]\nE       \tOrdinal0 [0x011122AB+2106027]\nE       \tOrdinal0 [0x011123D1+2106321]\nE       \tOrdinal0 [0x01124984+2181508]\nE       \tBaseThreadInitThunk [0x75F86359+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AE7C24+228]\nE       \tRtlGetAppContainerNamedObjectPath [0x77AE7BF4+180]\n\nd:\\program files (x86)\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:240: WebDriverException"}, "parameters": [{"name": "data", "value": "{'name': '账号错误', 'username': 'error', 'password': 'admin123456', 'errorMsg': '邮箱/手机号格式不正确!'}"}], "start": 1600684164702, "stop": 1600684164702, "uuid": "75ea3ed3-8757-4543-ac64-723522bd1092", "historyId": "1a2f7f546c46cd6087246d8e4ab3f9f4", "testCaseId": "3a530916654f9230b0bb2ae45296633f", "fullName": "test_login.login_test.TestLogin#test_01", "labels": [{"name": "parentSuite", "value": "test_login"}, {"name": "suite", "value": "login_test"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "17628-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_login.login_test"}]}