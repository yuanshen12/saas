{"name": "test_03[data0]", "status": "broken", "statusDetails": {"message": "FileNotFoundError: [Errno 2] No such file or directory: '../img/img_01.png'", "trace": "@pytest.fixture(scope=\"session\")\n    def project_session_login():\n        chromedriver = PATH(\"../software/chromedriver.exe\")\n        os.environ['webdriver.chrome.driver'] = chromedriver\n        global driver\n        driver = webdriver.Chrome(chromedriver)\n        driver.get(GD.saas_lab_url)\n        driver.maximize_window()\n        driver.implicitly_wait(20)\n        loc(driver).get_login_click()\n>       auth = Auth(driver).auth_all('../img/img_03.png')\n\nconftest.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Common\\common_auth.py:153: in auth_all\n    self.auth_img()\n..\\Common\\common_auth.py:29: in auth_img\n    img_save = Image.open('../img/img_01.png')\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nfp = '../img/img_01.png', mode = 'r'\n\n    def open(fp, mode=\"r\"):\n        \"\"\"\n        Opens and identifies the given image file.\n    \n        This is a lazy operation; this function identifies the file, but\n        the file remains open and the actual image data is not read from\n        the file until you try to process the data (or call the\n        :py:meth:`~PIL.Image.Image.load` method).  See\n        :py:func:`~PIL.Image.new`. See :ref:`file-handling`.\n    \n        :param fp: A filename (string), pathlib.Path object or a file object.\n           The file object must implement :py:meth:`~file.read`,\n           :py:meth:`~file.seek`, and :py:meth:`~file.tell` methods,\n           and be opened in binary mode.\n        :param mode: The mode.  If given, this argument must be \"r\".\n        :returns: An :py:class:`~PIL.Image.Image` object.\n        :exception FileNotFoundError: If the file cannot be found.\n        :exception PIL.UnidentifiedImageError: If the image cannot be opened and\n           identified.\n        :exception ValueError: If the ``mode`` is not \"r\", or if a ``StringIO``\n           instance is used for ``fp``.\n        \"\"\"\n    \n        if mode != \"r\":\n            raise ValueError(\"bad mode %r\" % mode)\n        elif isinstance(fp, io.StringIO):\n            raise ValueError(\n                \"StringIO cannot be used to open an image. \"\n                \"Binary data must be used instead.\"\n            )\n    \n        exclusive_fp = False\n        filename = \"\"\n        if isinstance(fp, Path):\n            filename = str(fp.resolve())\n        elif isPath(fp):\n            filename = fp\n    \n        if filename:\n>           fp = builtins.open(filename, \"rb\")\nE           FileNotFoundError: [Errno 2] No such file or directory: '../img/img_01.png'\n\nd:\\program files (x86)\\lib\\site-packages\\PIL\\Image.py:2878: FileNotFoundError"}, "parameters": [{"name": "data", "value": "{'name': '正常用例', 'alter_name': '修改测试项目'}"}], "start": 1601022864605, "stop": 1601022864605, "uuid": "57517469-d6ff-4dd9-9b9b-9f15cc99fd7d", "historyId": "72a506475a7625e550b1462382dc07c5", "testCaseId": "1796ee2cec3872f5209ee9e713a6867d", "fullName": "test_system.system_test.TestSystem#test_03", "labels": [{"name": "story", "value": "实验室管理修改项目组"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "test_system"}, {"name": "suite", "value": "system_test"}, {"name": "subSuite", "value": "TestSystem"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "16276-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_system.system_test"}]}