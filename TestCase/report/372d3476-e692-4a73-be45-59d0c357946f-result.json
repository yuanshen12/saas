{"name": "test_07", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <Locators.SystemLocators.system_locators.SystemLocators object at 0x03A088C8>, locator = ('class name', 'card_wrap_icon')\n\n    def wait_vs(self, locator):\n        try:\n>           WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(EC.visibility_of_element_located(locator))\n\n..\\Common\\plugs\\basepage.py:15: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"92033bbf6100c1b835bfb11c3b6de71b\")>\nmethod = <selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x03CB8190>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\user\\pycharmprojects\\pythonproject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException\n\nDuring handling of the above exception, another exception occurred:\n\nproject_session_login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"92033bbf6100c1b835bfb11c3b6de71b\")>\n\n    @pytest.fixture(scope=\"class\")\n    def start_module(project_session_login):\n        global driver\n        driver = project_session_login\n        driver.implicitly_wait(20)\n>       loc(driver).get_system()\n\ntest_system\\conftest.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Locators\\SystemLocators\\system_locators.py:10: in get_system\n    self.click_element(self.click_subscribe)\n..\\Common\\plugs\\basepage.py:35: in click_element\n    self.get_element(locator).click()\n..\\Common\\plugs\\basepage.py:23: in get_element\n    self.wait_vs(locator)\n..\\Common\\plugs\\basepage.py:17: in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(EC.presence_of_all_elements_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"92033bbf6100c1b835bfb11c3b6de71b\")>\nmethod = <selenium.webdriver.support.expected_conditions.presence_of_all_elements_located object at 0x03CB8100>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\user\\pycharmprojects\\pythonproject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1600676121830, "stop": 1600676121830, "uuid": "c69f6001-4d89-47ad-b27d-fcab494049ff", "historyId": "c9b054abb5a919d40268efd28893b631", "testCaseId": "0649516c7463827c2af8dbde4629cb9d", "fullName": "test_system.system_test.TestSystem#test_07", "labels": [{"name": "story", "value": "角色管理删除角色"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "test_system"}, {"name": "suite", "value": "system_test"}, {"name": "subSuite", "value": "TestSystem"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "19940-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_system.system_test"}]}