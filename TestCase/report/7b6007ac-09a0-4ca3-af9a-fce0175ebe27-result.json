{"name": "test_20[data0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCase.test_05.TestSystem object at 0x00A945C8>\nsession_login = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"7a9ad347d2bc0b4b92ff33a8faf9ad77\")>, data = {'add_name': '测试供应商'}\n\n    @allure.story(\"供应商信息\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"data\", LD.add_supplier_name)\n    def test_20(self, session_login, data):\n        self.driver = session_login\n>       search = loc_supplier(self.driver).search_supplier(data[\"add_name\"])\n\ntest_05.py:21: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\Locators\\LabLocators\\system\\supplier.py:47: in search_supplier\n    search = self.get_element_text(self.text_search, num=1)\n..\\Common\\basepage.py:79: in get_element_text\n    return self.get_element(EC.visibility_of_all_elements_located, locator, num).text\n..\\Common\\basepage.py:32: in get_element\n    self.wait_vs(ec, locator)\n..\\Common\\basepage.py:18: in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(ec(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"7a9ad347d2bc0b4b92ff33a8faf9ad77\")>\nmethod = <function visibility_of_all_elements_located.<locals>._predicate at 0x09752E38>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:87: TimeoutException"}, "parameters": [{"name": "data", "value": "{'add_name': '测试供应商'}"}], "start": 1602724906841, "stop": 1602724929531, "uuid": "bb1dfc4d-dc0d-4970-af27-abd7f892a6aa", "historyId": "08b77450820260d2d2d5039108a1a740", "testCaseId": "66866be1649f3f78ef3b7bce60155423", "fullName": "test_05.TestSystem#test_20", "labels": [{"name": "story", "value": "供应商信息"}, {"name": "tag", "value": "smoke"}, {"name": "suite", "value": "test_05"}, {"name": "subSuite", "value": "TestSystem"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "17852-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_05"}]}