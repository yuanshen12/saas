{"name": "test_05[data0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCase.test_system.system_test.TestSystem object at 0x0A1567C0>, start_module = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"feb0f41ee61866e28bea8b0948e2bc89\")>, data = {'add_name': '测试角色', 'name': '正常用例'}\n\n    @allure.story(\"角色管理新增角色\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"data\", LD.add_role_name)\n    def test_05(self, start_module, data):\n        self.driver = start_module\n>       loc_add = loc_role(self.driver).add_role(data[\"add_name\"])\n\nsystem_test.py:44: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Locators\\SystemLocators\\role_locators.py:28: in add_role\n    success_text = self.get_element_text(self.click_role_text, num=-3)\n..\\..\\Common\\plugs\\basepage.py:62: in get_element_text\n    return self.get_element(EC.invisibility_of_element, locator, num).text\n..\\..\\Common\\plugs\\basepage.py:23: in get_element\n    self.wait_vs(ec, locator)\n..\\..\\Common\\plugs\\basepage.py:14: in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(ec(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"feb0f41ee61866e28bea8b0948e2bc89\")>, method = <selenium.webdriver.support.expected_conditions.invisibility_of_element object at 0x0A156B08>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\user\\pycharmprojects\\pythonproject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "parameters": [{"name": "data", "value": "{'name': '正常用例', 'add_name': '测试角色'}"}], "start": 1600831473193, "stop": 1600831486241, "uuid": "19f269dd-c1d8-494a-9447-020ec215a7b3", "historyId": "d4669ee0a695646fd3b3990fc111890b", "testCaseId": "cb2024199f67e7033f3a5fa773251942", "fullName": "system_test.TestSystem#test_05", "labels": [{"name": "story", "value": "角色管理新增角色"}, {"name": "tag", "value": "smoke"}, {"name": "suite", "value": "system_test"}, {"name": "subSuite", "value": "TestSystem"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "10204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "system_test"}]}