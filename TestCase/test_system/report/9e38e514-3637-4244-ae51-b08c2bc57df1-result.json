{"name": "test_03[data0]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <TestCase.test_system.system_test.TestSystem object at 0x0A130A30>, start_module = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"feb0f41ee61866e28bea8b0948e2bc89\")>, data = {'alter_name': '修改测试项目', 'name': '正常用例'}\n\n    @allure.story(\"实验室管理修改项目组\")\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"data\", LD.alter_name)\n    def test_03(self, start_module, data):\n        self.driver = start_module\n>       loc_alter = loc(self.driver).get_details(data[\"alter_name\"])\n\nsystem_test.py:29: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\Locators\\SystemLocators\\subscribe_locators.py:51: in get_details\n    success_text = self.get_element_text(self.success_name, num=4)\n..\\..\\Common\\plugs\\basepage.py:62: in get_element_text\n    return self.get_element(EC.invisibility_of_element, locator, num).text\n..\\..\\Common\\plugs\\basepage.py:23: in get_element\n    self.wait_vs(ec, locator)\n..\\..\\Common\\plugs\\basepage.py:14: in wait_vs\n    WebDriverWait(self.driver, timeout=10, poll_frequency=0.5).until(ec(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"feb0f41ee61866e28bea8b0948e2bc89\")>, method = <selenium.webdriver.support.expected_conditions.invisibility_of_element object at 0x0A130E38>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\user\\pycharmprojects\\pythonproject\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "parameters": [{"name": "data", "value": "{'name': '正常用例', 'alter_name': '修改测试项目'}"}], "start": 1600831459881, "stop": 1600831470949, "uuid": "26b69be5-51f6-4f66-9462-3e8933d84454", "historyId": "c11a6fad123596fc3e7619df64787b83", "testCaseId": "a6f0361e0a3f4836d152a915982de737", "fullName": "system_test.TestSystem#test_03", "labels": [{"name": "story", "value": "实验室管理修改项目组"}, {"name": "tag", "value": "smoke"}, {"name": "suite", "value": "system_test"}, {"name": "subSuite", "value": "TestSystem"}, {"name": "host", "value": "DESKTOP-BQG3M1K"}, {"name": "thread", "value": "10204-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "system_test"}]}